#! /usr/bin/env python
# -*- python -*-

#####################################################################################################
#
# PyDVI - Python Library to Process DVI Stream
# Copyright (C) 2009 Salvaire Fabrice
#
#####################################################################################################

#####################################################################################################
#
# Audit
#
#  - 16/01/2010 fabrice
#
#####################################################################################################

#####################################################################################################

import os
import re
import subprocess
import sys

from optparse import OptionParser

#####################################################################################################

default_exclude = '\.bzr|\.pyc$|~$'

#####################################################################################################
#
# Options
#

usage = 'usage: %prog [options]'

parser = OptionParser(usage)

parser.add_option('--root-tree-path',
                   dest = 'root_tree_path',
                   type = 'string', default = '.',
                   help = 'Root Path')

parser.add_option('--exclude',
                   dest = 'exclude',
                   type = 'string', default = default_exclude,
                   help = 'Exclude regexp [%s]' % (default_exclude))

parser.add_option('--pattern',
                   dest = 'pattern',
                   type = 'string', default = None,
                   help = 'pattern')

parser.add_option('--new-pattern',
                   dest = 'new_pattern',
                   type = 'string', default = None,
                   help = 'New pattern')

opt, args = parser.parse_args()

#####################################################################################################

root_tree_path = os.path.expanduser(opt.root_tree_path)
root_tree_path = os.path.abspath(root_tree_path)

if opt.pattern is None:
    sys.exit(1)
else:
    pattern_re = re.compile(opt.pattern)

if opt.exclude is not None:
    exclude_re = re.compile(opt.exclude)
else:
    exclude_re = None

if opt.new_pattern is not None:
    new_pattern_re = re.compile(opt.new_pattern)
else:
    new_pattern_re = None

for root, dirs, filenames in os.walk(root_tree_path):
    for filename in filenames:
        
        absolut_filename = os.path.join(root, filename)

        if exclude_re is None or exclude_re.search(absolut_filename) is None:

            retcode = subprocess.call(['grep', '--quiet', opt.pattern, absolut_filename])
            if retcode == 0:
                print absolut_filename

                if opt.new_pattern is not None:
                    script = 's/%s/%s/g' % (opt.pattern, opt.new_pattern)
                    subprocess.call(['sed', '--in-place=~', script, absolut_filename])

sys.exit(0)

#####################################################################################################
#
# End
#
#####################################################################################################
