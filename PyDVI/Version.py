#####################################################################################################
#
# PyDVI - Python Library to Process DVI Stream
# Copyright (C) 2009 Salvaire Fabrice
#
#####################################################################################################

#####################################################################################################
#
# Audit
#
#
#####################################################################################################

#####################################################################################################

# cf. http://en.wikipedia.org/wiki/Software_versioning

#####################################################################################################

import re
import string

#####################################################################################################

class PyDviVersion(object):

    major_version    = 0
    minor_version    = 1
    revision_version = 0

    ###############################################

    def to_list(self):

        return [self.major_version, self.minor_version, self.revision_version]

    ###############################################

    def to_string(self):

        return string.join(map(str, self.to_list()), sep='.')

    ###############################################

    @staticmethod
    def parse(self, version_string):

        match = re.match('v([0-9]+)\.([0-9]+)\.([0-9]+)', version_string)

        if match is not None:
            return map(int, match.groups())
        else:
            return None

#####################################################################################################

pydvi_version = PyDviVersion()
        
#####################################################################################################
#
# End
#
#####################################################################################################
